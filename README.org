* Controlling LEDs over WiFi

  Uses ESP8266 that talks to 1 or more Pro Minis over I2c bus that have 2 16 bit resolution PWM pins.

  You can talk to ESP8266 over OSC (Open Sound Control) protocol and tell it to change brightness of LEDs.

** Hardware
   - ESP8266 (I use D1 mini)
   - Arduino Pro Mini. I have some clones. I use 5V 16Mhz 168 version. It works on 3v3 for me, so no need for i2c power level converters.

** Setup
   SSID and password for WiFi network is defined in "esp8266_osc_server/src/wifi_network.h", use wifi_network_example.h as a reference.

** Upload firmware
   1. Install platformio

   2. Run this in esp8266_osc_server and i2c_leds_controller directories to compile and upload to corresponding controller

      #+BEGIN_SRC bash
      platformio run -t upload --upload-port /dev/ttyUSB0
      #+END_SRC

      Replace /dev/ttyUSB0 with your UART or remove it and --upload-port argument and hope platformio guesses correctly.
** OSC
   Routes used are "led/1" through "led/4".
   for now OSC server assumes it has 2 i2c LED controllers connected on hardcoded addresses, it's fine for me for now.
** Things to do
*** TODO Recover from WiFi disconnects
*** TODO Optional logging over serial
    I don't want it to spend time printing to serial when I don't need it.
*** TODO Ability to discover IP address of ESP8266 OSC server
    Possible options:
    - Use an LCD screen to display it.
    - mDNS?
    - Broadcast something on the network?
*** TODO Minimize latency
*** TODO Ability to set i2c address on Pro Mini in runtime
    Right now it's hardcoded and I need to reupload firmware to change i2c address, which is inconvenient. It could check state of some pin to determine address it should use
*** TODO Status LEDs for debugging?
    - Is it connected to WiFi?
    - Error rate?
